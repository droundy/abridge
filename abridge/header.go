package main

import (
	"fmt"
	"http"
	//"github.com/ajstarks/svgo"
)

func link(c http.ResponseWriter, dat *TransitoryData, url, label string) {
	if dat.Url == url {
		fmt.Fprintf(c, `<a class="x">%s</a>`, label)
	} else {
		fmt.Fprintf(c, `<a href="%s">%s</a>`, url, label)
	}
}

func header(c http.ResponseWriter, dat *TransitoryData, title string) (footer func()) {
	c.SetHeader("Content-Type", "application/xhtml+xml")
	fmt.Fprintf(c, `
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>

<link href="style.css" rel="stylesheet" type="text/css"/>
<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
<title>%s</title>

</head>

<body id="body">`, title)

	fmt.Fprintf(c, `<form id="catchall" method="post" action="%s">`, dat.Url)
	fmt.Fprintln(c, `


<div id="links">
<ul class="navbar"><li>`)
	link(c, dat, "/", "Analyze bids")
	fmt.Fprintln(c, `</li><li>`)
	link(c, dat, "/bidder", "Bid fourth hand")
	fmt.Fprintln(c, `</li><li>`)
	link(c, dat, "/bidforme", "Bid for me")
	fmt.Fprintln(c, `</li><li>`)
	link(c, dat, "/settings", "Settings")
	fmt.Fprintln(c, `</li><li>`)
	link(c, dat, "/about", "About aBridge")
	fmt.Fprintln(c, `</li></ul>`)
	fmt.Fprintln(c, `</div>`)

	return func() {
		// This is the footer... which is intended to be deferred.

		dat.Save(c)
		fmt.Fprintln(c, `

</form></body></html>`)
	}
}

/*
		s := svg.New(c)
		// Start begins a new XML document!
		//s.Start(500, 500)
		fmt.Fprintf(c, `<!-- Generated by SVGo -->
        <svg id="logo" xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink"
             preserveAspectRatio="xMidYMid slice"
             width="%d" height="%d">`, 500, 500)
		// This isn't actually used for anything yet...
		s.Circle(350, 150, 125, "fill:#ffbbff;stroke:#ffddff")
		s.End()


<svg xmlns="http://www.w3.org/2000/svg" version="1.1"  
viewBox="0 0 100 100" preserveAspectRatio="xMidYMid slice"  
style="width:100%; height:100%; position:absolute; top:0; left:0; z-index:-2;">  
<linearGradient id="gradient">  
<stop stop-color="#ffddff" offset="0%"/>  
<stop stop-color="#ffffdd" offset="100%"/>  
</linearGradient>  
<rect x="0" y="0" width="100" height="100" style="fill:url(#gradient)" />  
<circle cx="50" cy="50" r="30" style="fill:url(#gradient)" />  
</svg>

*/
